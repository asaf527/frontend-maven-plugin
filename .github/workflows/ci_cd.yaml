name: Security Analysis

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_sonarcloud:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven' 

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT }}
            -Dsonar.sources=.
            -Dsonar.language=java
            -Dsonar.java.binaries=.
            -Dsonar.qualitygate.wait=true
      
      - name: Generate Sonar Report
        if: always()
        run: | 
          curl -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" "https://sonarcloud.io/api/measures/component?componentKey=${{ secrets.SONAR_PROJECT }}&metricKeys=coverage,bugs,vulnerabilities" -o sonar-report.json

      - name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: sonar-analysis-report
          path: sonar-report.json

  run_snyk_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Snyk security analysis
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --maven-aggregate-project --severity-threshold=critical --fail-on=all --json-file-output=sync-report.json
        continue-on-error: false